stages:
  - build
  - test
  - scan
  - deploy

variables:
  SONAR_HOST_URL: $SONAR_HOST_URL
  SONAR_LOGIN: $SONAR_LOGIN
  PROJ_FILE_PATH: "pom.xml"
  SONAR_SCANNER_OPTIONS: |
    -Dsonar.dependencyCheck.xmlReportPath=dependency-check/dependency-check-report.xml
    -Dsonar.dependencyCheck.jsonReportPath=dependency-check/dependency-check-report.json
    -Dsonar.dependencyCheck.htmlReportPath=dependency-check/dependency-check-report.html
  OAUTH_PROXY_IMAGE_TAG: "v7-update1"
  # disabled by default, to avoid issues when not defined
  ENABLE_OAUTH_PROXY: "false"
  MAVEN_OPTS: -Dmaven.repo.local=.m2/repository
  MAVEN_IMAGE: maven:latest

build:
  stage: build
  image: ${MAVEN_IMAGE}
  script:
    - cd "${PROJECT_ROOT_DIR}"
    #    - rm -Force target/*
    - mvn package -s settings.xml
  cache:
    # cache target folder for pipeline performances
    policy: pull-push
    untracked: false
    paths:
      - $PROJECT_ROOT_DIR/target/
  artifacts:
    paths:
      - $PROJECT_ROOT_DIR/target/*.jar

sonarqube-check:
  stage: scan
  image: ${MAVEN_IMAGE}
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - mvn verify sonar:sonar -Dsonar.projectKey=CodeAcademySamling2Java
  allow_failure: true
  only:
    - merge_requests
    - master
    - develop